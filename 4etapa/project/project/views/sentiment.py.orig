import unicodedata
import re

def hodnota_textu(obsah, request, diacritic=True, no_diacritic=False):
    ohodnotene_slova = 0
    hodnota_celkove = 0

    slova = re.split(r"[\s\.,\!\?]+", obsah)
    
    for slovo in slova:
        slovo = slovo.strip('";:„')
        slovo=slovo.lower()
        if len(slovo) > 2:
            hodnota = wordValue(request, slovo, diacritic, no_diacritic)
            if hodnota != 0:
                #print(slovo + ' ' + str(hodnota))
                
                hodnota_celkove += hodnota
                ohodnotene_slova += 1
    if ohodnotene_slova != 0:
        return hodnota_celkove / ohodnotene_slova
    else:
        return 0
def hlbsia_analizu_textu(obsah, request, diacritic=True, no_diacritic=False):
    ohodnotene_slova = 0
    hodnota_celkove = 0
<<<<<<< HEAD
    pocet_ohodnotenych_slov = 0
    pocet_pozitivnych_slov = 0
    pocet_negativnych_slov = 0
=======
    priemer_celkove = 0
    vysledok = dict()
    for slovo in slova:
        hodnota = wordValue(request, slovo, diacritic, no_diacritic)
        if hodnota != 0:
            #print(slovo, hodnota)
            vysledok[slovo] = hodnota
            hodnota_celkove += hodnota
            ohodnotene_slova += 1

    if (analyzuj):
        print(vysledok)
        return vysledok
>>>>>>> 45858dea2ed468955c9a27f9cfe7b3af7544ff3f

    slova = re.split(r"[\s\.,\!\?]+", obsah)
    
    for slovo in slova:
        slovo = slovo.strip('";:„')
        slovo=slovo.lower()
        if len(slovo) > 2:
            hodnota = wordValue(request, slovo, diacritic, no_diacritic)
            if hodnota != 0:
                #print(slovo + ' ' + str(hodnota))
                pocet_ohodnotenych_slov += 1
                hodnota_celkove += hodnota
                ohodnotene_slova += 1
                if hodnota > 0:
                    pocet_pozitivnych_slov += 1
                elif hodnota < 0:
                    pocet_negativnych_slov += 1
    
    if ohodnotene_slova != 0:
        return {'sentiment slova' : hodnota_celkove / ohodnotene_slova, 'pocet_slov' : pocet_ohodnotenych_slov, 'pocet_pozitivnych' : pocet_pozitivnych_slov,\
         'pocet_negativnych' : pocet_negativnych_slov } 
    else:
        return 0

def remove_diacritic(input):
    '''
    Accept a unicode string, and return a normal string (bytes in Python 3)
    without any diacritical marks.
    '''
    output=unicodedata.normalize('NFKD', input).encode('ASCII', 'ignore')
    output=output.decode("utf-8")
    return output

def searchInDict(request,word, diacritic, no_diacritic):
    formDictionary = request.form_dic
    formDictionaryDiacritic = request.form_dic_diac
    valuedDictionary = request.value_dic
    valuedDictionaryDiacritic = request.value_dic_diac
    
    if diacritic and no_diacritic:
        value = int(valuedDictionaryDiacritic[formDictionaryDiacritic[word]])
        if value != 0:
            return value
        word = remove_diacritic(word)
        return int(valuedDictionary[formDictionary[word]])
    if diacritic:
        return int(valuedDictionaryDiacritic[formDictionaryDiacritic[word]])
    if no_diacritic:
        #word = remove_diacritic(word)
        return int(valuedDictionary[formDictionary[word]])

def wordValue(request,word, diacritic, no_diacritic):
    najKonstanta = 1.5
    sieKonstanta = 1.25
    stupen3 = "naj"
    stupen2_diacritic = "šie"
    stupen2 = "sie"
    
    #konstanty = {stupen3:najKonstanta,stupen2:sieKonstanta}
    if word.find(stupen3) == 0:
        return searchInDict(request, word, diacritic, no_diacritic) * najKonstanta

    if diacritic and word.find(stupen2_diacritic) > 0:
        return searchInDict(request, word, diacritic, no_diacritic) * sieKonstanta

    if no_diacritic and word.find(stupen2) > 0:
        return searchInDict(request, word, diacritic, no_diacritic) * sieKonstanta

    return searchInDict(request, word, diacritic, no_diacritic)
    
def analyzuj_text_po_slovach(obsah, request, diacritic, no_diacritic):
    slova = re.split(r"[\s\.,\!\?]+", obsah)
    return hodnota_zo_slov(slova, request, diacritic, no_diacritic, True)

def analyzuj_text_po_vetach(obsah, request, diacritic, no_diacritic):
    sentences = [s.strip() for s in re.split('[\.\?!]' , obsah) if s]
    vysledok = dict()
    i = 0
    for sentence in sentences:
        hodnota = hodnota_textu(sentence, request, diacritic, no_diacritic)
        if (hodnota != 0):
            vysledok[sentence] = hodnota
            i += 1
    print(vysledok)
    return vysledok

def analyzuj_text_po_kuskoch(obsah, request, diacritic, no_diacritic, kusov=0):
    slova = re.split(r"[\s\.,\!\?]+", obsah)
    word_count = len(slova)

    #defaultne bude jeden kus dlzky 100 slov, davame ale limit na pocet vypoctov -> 30
    if kusov == 0:

        kusov = word_count // 100
        if kusov == 0:
            kusov = 1
        elif kusov > 30:
            kusov = 30

    #print(word_count)
    vysledok = dict()
    one_part = word_count // kusov
    part = 0
    for kus in range(kusov):
        new_part = part+one_part
        if (word_count - new_part) < one_part:
            new_part = word_count
        else:
            new_part = part+one_part
        hodnota = hodnota_zo_slov(slova[part:new_part], request, diacritic, no_diacritic)
        part += one_part
<<<<<<< HEAD
        vysledok.append(hodnota)
    print(vysledok)
    return vysledok
=======
        vysledok[kus] = hodnota
    return vysledok
>>>>>>> 45858dea2ed468955c9a27f9cfe7b3af7544ff3f
